import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { HStack, Flex, Text, Box, VStack, Button, Img, Select, Stack} from '@chakra-ui/react'
import Post from '../Components/Post'
import RecommendedPost from '../Components/RecommendedPost'
import Footer from '../Components/Footer'
import Navbar from '../Components/Navbar'
import { useSelector, useDispatch } from 'react-redux';
import { fetchArticles, setCurrentPage, setCountry } from '../features/News/NewsSlice'
import { useEffect } from 'react'
import moment from 'moment'
import { countries } from '../services'
import Pagination from '../Components/PaginatedPost'
import Link from 'next/link'

export default function Home() {

  const dispatch = useDispatch();
  const { articles, totalItems,  currentPage, status, error, country } = useSelector((state) => state.news);


  useEffect(() => {
    dispatch(fetchArticles({country:"us"}));
    dispatch(setCountry("us"))
   
  }, [dispatch]);
  
  useEffect(()=>{
    console.log(articles,"articles")
  },[articles])

  // Filter articles with authors to display at the front of the page
  const filteredArticles = articles.filter((article) => article.author);

  const theCountry = countries.filter((item) => item.shortcode===country);

  
  return (
    <>
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar/>
    <Box p ={["50px 10px","50px 30px","5rem 3.5rem"]}>
       <Flex justify="space-between" flexDir={["column","column","row"]}>
          <Box w={["100%","100%","50%"]}>
             <Text fontFamily="Poppins">Top Headlines in the {theCountry[0].source}</Text>
             <Text mb="20px" color="white" fontFamily="Cormorant Upright" fontSize={["30px","40px","52px"]} letterSpacing="0.3%" fontWeight="bold" p={["3px","5px","10px"]}>
             Stay Informed, Stay Ahead: Your Gateway to Breaking News and Engaging Stories!
             </Text>
             <HStack mt="60px" display={["none","none","flex"]}>
                
               {
                filteredArticles.slice(4,6).map((item)=>{
                  return(
                    <Box>
                          <Img bg='#909090' src={item.urlToImage}  w="200px" h="100px" />
                        <Text fontWeight="700" letterSpacing="0.5%" fontSize="16px" color="#FFFFFF" p="20px 0">{item.title}</Text>
                      </Box>
                  )
                })
              }
            </HStack>
          </Box>
          <Box w={["100%","100%","40%"]} p={["10px","20px","30px"]} bg="rgba(255, 255, 255, 0.1)" boxShadow="rgba(0, 0, 0, 0.35) 0px 5px 15px">
            <Text 
                fontWeight="bold" 
                letterSpacing="0.5%" 
                fontSize={["16px","24px","31px" ]}
                color="#FFFFFF"
                mb="20px"
                fontFamily="Poppins" 
              >Popular in the {theCountry[0].source}</Text>
              <VStack spacing={2}>
               {
                filteredArticles.slice(0,3).map((item,id)=>{
                  return(
                  <Link href={`/news/${id}`} key={id}> 
                    <Flex flexDirection={["column","row","column","row"]} className='news-card' align="flex-start" w="100%" justify="space-between">
                    
                        <Img bg='#909090' src={item.urlToImage}  w={["100%","50%","100%","50%"]} h="100px" />
                    
                        <Box w={["100%","50%","100%","50%"]} >
                             <HStack>
                                <Text fontWeight="bold" letterSpacing="0.8%" fontSize={["14px","16px"]} fontFamily="Poppins"  color="#FFFFFF">{item.author.length > 14 ? `${item.author.slice(0, 14)}...` : item.author || 'Random'} 
                                </Text>
                                <Text fontWeight="bold" letterSpacing="0.8%" fontSize={["8px","10px"]} fontFamily="Poppins"  color="#FFFFFF">{moment(item.publishedAt).startOf('day').fromNow()}</Text>
                             </HStack>
                            <Text fontWeight="700" letterSpacing="0.5%" fontSize={["12px","14px","16px"]} color="#FFFFFF" p="20px 0" fontFamily="Cormorant Upright" >{item.title.length > 60 ? `${item.title.slice(0, 60)}...` : item.title}</Text>
                        </Box>
                    </Flex>
                  </Link>
                  )
                })
              }
               </VStack>
          </Box>
       </Flex>
    </Box>
  </div>
  <Pagination/>
  <RecommendedPost></RecommendedPost>
  <Footer></Footer>
  </>
  )
}
